#Building DataFrame from Vectors and setting column names to Country, Code and Region
df<-data.frame(Country=Countries_2012_Dataset,Code=Codes_2012_Dataset,Region=Regions_2012_Dataset)
#Merge the DataFrame df with original dataset and remove any columns with repeated information
merged_df<-merge(dataset,df,by.x="Country.Code",by.y="Code")
merged_df$Country<-NULL
#Setting Transparency to 50% so that overlapping datapoints are visible. Shape can be set with values from (0-25)
qplot(data=merged_df,x=Internet.users,y=Birth.rate,colour=Region,size=I(5),shape=I(17),alpha=I(0.5),main="Birth Rate vs Internet Users")
# Scatterplot depicting Life Expectancy and Fertility Rate statistics by Country categorizing by Countriesâ€™ Regions.
dataset = read.csv('C:/Users/Praahas/Projects/R-Lab/R-Lab/Demographic-Data/P2-Demographic-Data_2.csv')
# Splitting the data frame into two: data1960 and data2013.
data1960<-dataset[dataset$Year==1960,]
data2013<-dataset[dataset$Year==2013,]
#Build DataFrame from Data Vectors
add1960<-data.frame(Code=Country_Code,Life.Exp=Life_Expectancy_At_Birth_1960)
add2013<-data.frame(Code=Country_Code,Life.Exp=Life_Expectancy_At_Birth_2013)
rm(list=ls())
#Execute below code to generate three new vectors
Countries_2012_Dataset <- c("Aruba","Afghanistan","Angola","Albania","United Arab Emirates", "Argentina", "Armenia", "Antigua and Barbuda","Australia","Austria","Azerbaijan","Burundi","Belgium","Benin","Burkina Faso", "Bangladesh", "Bulgaria","Bahrain","Bahamas, The","Bosnia and Herzegovina", "Belarus", "Belize", "Bermuda", "Bolivia", "Brazil", "Barbados","Brunei Darussalam","Bhutan","Botswana","Central African Republic", "Canada", "Switzerland", "Chile", "China", "Cote d'Ivoire","Cameroon","Congo, Rep.","Colombia","Comoros","Cabo Verde","Costa Rica","Cuba","Cayman Islands", "Cyprus","Czech Republic","Germany","Djibouti","Denmark","Dominican Republic","Algeria","Ecuador","Egypt, Arab Rep.", "Eritrea","Spain","Estonia","Ethiopia","Finland","Fiji","France","Micronesia, Fed. Sts.","Gabon","United Kingdom", "Georgia", "Ghana","Guinea","Gambia, The","Guinea-Bissau","Equatorial Guinea", "Greece", "Grenada", "Greenland", "Guatemala", "Guam","Guyana","Hong Kong SAR, China","Honduras","Croatia","Haiti","Hungary","Indonesia","India","Ireland","Iran, Islamic Rep.","Iraq","Iceland","Israel","Italy","Jamaica","Jordan","Japan","Kazakhstan","Kenya","Kyrgyz Republic", "Cambodia","Kiribati","Korea, Rep.","Kuwait","Lao PDR","Lebanon","Liberia","Libya","St. Lucia","Liechtenstein","Sri Lanka","Lesotho","Lithuania","Luxembourg","Latvia","Macao SAR, China", "Morocco", "Moldova", "Madagascar", "Maldives","Mexico","Macedonia, FYR", "Mali", "Malta", "Myanmar", "Montenegro", "Mongolia", "Mozambique", "Mauritania","Mauritius","Malawi","Malaysia","Namibia","New Caledonia", "Niger", "Nigeria", "Nicaragua", "Netherlands", "Norway","Nepal","New Zealand","Oman","Pakistan","Panama","Peru","Philippines","Papua New Guinea","Poland","Puerto Rico","Portugal","Paraguay","French Polynesia","Qatar","Romania","Russian Federation","Rwanda","Saudi Arabia", "Sudan", "Senegal","Singapore","Solomon Islands","Sierra Leone","El Salvador","Somalia","Serbia","South Sudan","Sao Tome and Principe","Suriname","Slovak Republic","Slovenia","Sweden","Swaziland","Seychelles","Syrian Arab Republic", "Chad", "Togo","Thailand","Tajikistan","Turkmenistan","Timor-Leste","Tonga","Trinidad and Tobago", "Tunisia", "Turkey", "Tanzania","Uganda","Ukraine","Uruguay","United States","Uzbekistan","St. Vincent and the Grenadines","Venezuela, RB", "Virgin Islands (U.S.)","Vietnam","Vanuatu","West Bank and Gaza","Samoa","Yemen, Rep.","South Africa","Congo, Dem. Rep.","Zambia","Zimbabwe")
Codes_2012_Dataset<- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYM","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SRB","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYC","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","PSE","WSM","YEM","ZAF","COD","ZMB","ZWE")
Regions_2012_Dataset <- c("The Americas","Asia","Africa","Europe","Middle East","The Americas","Asia","The Americas", "Oceania","Europe","Asia","Africa","Europe","Africa","Africa","Asia","Europe","Middle East","The Americas", "Europe", "Europe","The Americas","The Americas","The Americas","The Americas","The Americas", "Asia", "Asia", "Africa", "Africa", "The Americas","Europe","The Americas","Asia","Africa","Africa","Africa","The Americas","Africa","Africa","The Americas", "The Americas","The Americas","Europe","Europe","Europe","Africa","Europe","The Americas","Africa","The Americas", "Africa","Africa","Europe","Europe","Africa","Europe","Oceania","Europe","Oceania","Africa","Europe","Asia","Africa","Africa","Africa","Africa","Africa","Europe","The Americas","The Americas","The Americas","Oceania","The Americas","Asia","The Americas","Europe","The Americas","Europe","Asia","Asia","Europe","Middle East","Middle East","Europe","Middle East", "Europe","The Americas","Middle East","Asia","Asia","Africa","Asia","Asia","Oceania","Asia","Middle East","Asia","Middle East","Africa","Africa","The Americas", "Europe", "Asia", "Africa", "Europe", "Europe", "Europe", "Asia", "Africa", "Europe", "Africa","Asia","The Americas", "Europe", "Africa", "Europe", "Asia", "Europe", "Asia", "Africa"," Africa", "Africa", "Africa", "Asia","Africa","Oceania","Africa","Africa","The Americas","Europe","Europe","Asia","Oceania","Middle East","Asia","The Americas","The Americas","Asia","Oceania","Europe","The Americas","Europe","The Americas","Oceania","Middle East", "Europe","Europe","Africa","Middle East","Africa","Africa","Asia","Oceania","Africa","The Americas", "Africa", "Europe", "Africa","Africa","The Americas","Europe","Europe","Europe","Africa","Africa","Middle East", "Africa", "Africa", "Asia", "Asia","Asia","Asia","Oceania","The Americas","Africa","Europe","Africa","Africa","Europe","The Americas","The Americas", "Asia","The Americas","The Americas","The Americas","Asia","Oceania","Middle East","Oceania","Middle East", "Africa", "Africa","Africa","Africa")
Country_Code <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","WSM","YEM","ZAF","COD","ZMB","ZWE")
Life_Expectancy_At_Birth_1960 <- c(65.5693658536586,32.328512195122,32.9848292682927,62.2543658536585,52.2432195121951,65.2155365853659,65.8634634146342,61.7827317073171,70.8170731707317,68.5856097560976,60.836243902439,41.2360487804878,69.7019512195122,37.2782682926829,34.4779024390244,45.8293170731707,69.2475609756098,52.0893658536585,62.7290487804878,60.2762195121951,67.7080975609756,59.9613658536585,42.1183170731707,54.2054634146342,60.7380487804878,62.5003658536585,32.3593658536585,50.5477317073171,36.4826341463415,71.1331707317073,71.3134146341463,57.4582926829268,43.4658048780488,36.8724146341463,41.523756097561,48.5816341463415,56.716756097561,41.4424390243903,48.8564146341463,60.5761951219512,63.9046585365854,69.5939268292683,70.3487804878049,69.3129512195122,44.0212682926829,72.1765853658537,51.8452682926829,46.1351219512195,53.215,48.0137073170732,37.3629024390244,69.1092682926829,67.9059756097561,38.4057073170732,68.819756097561,55.9584878048781,69.8682926829268,57.5865853658537,39.5701219512195,71.1268292682927,63.4318536585366,45.8314634146342,34.8863902439024,32.0422195121951,37.8404390243902,36.7330487804878,68.1639024390244,59.8159268292683,45.5316341463415,61.2263414634146,60.2787317073171,66.9997073170732,46.2883170731707,64.6086585365854,42.1000975609756,68.0031707317073,48.6403170731707,41.1719512195122,69.691756097561,44.945512195122,48.0306829268293,73.4286585365854,69.1239024390244,64.1918292682927,52.6852682926829,67.6660975609756,58.3675853658537,46.3624146341463,56.1280731707317,41.2320243902439,49.2159756097561,53.0013170731707,60.3479512195122,43.2044634146342,63.2801219512195,34.7831707317073,42.6411951219512,57.303756097561,59.7471463414634,46.5107073170732,69.8473170731707,68.4463902439024,69.7868292682927,64.6609268292683,48.4466341463415,61.8127804878049,39.9746829268293,37.2686341463415,57.0656341463415,60.6228048780488,28.2116097560976,67.6017804878049,42.7363902439024,63.7056097560976,48.3688048780488,35.0037073170732,43.4830975609756,58.7452195121951,37.7736341463415,59.4753414634146,46.8803902439024,58.6390243902439,35.5150487804878,37.1829512195122,46.9988292682927,73.3926829268293,73.549756097561,35.1708292682927,71.2365853658537,42.6670731707317,45.2904634146342,60.8817073170732,47.6915853658537,57.8119268292683,38.462243902439,67.6804878048781,68.7196097560976,62.8089268292683,63.7937073170732,56.3570487804878,61.2060731707317,65.6424390243903,66.0552926829268,42.2492926829268,45.6662682926829,48.1876341463415,38.206,65.6598292682927,49.3817073170732,30.3315365853659,49.9479268292683,36.9658780487805,31.6767073170732,50.4513658536585,59.6801219512195,69.9759268292683,68.9780487804878,73.0056097560976,44.2337804878049,52.768243902439,38.0161219512195,40.2728292682927,54.6993170731707,56.1535365853659,54.4586829268293,33.7271219512195,61.3645365853659,62.6575853658537,42.009756097561,45.3844146341463,43.6538780487805,43.9835609756098,68.2995365853659,67.8963902439025,69.7707317073171,58.8855365853659,57.7238780487805,59.2851219512195,63.7302195121951,59.0670243902439,46.4874878048781,49.969512195122,34.3638048780488,49.0362926829268,41.0180487804878,45.1098048780488,51.5424634146342)
Life_Expectancy_At_Birth_2013 <- c(75.3286585365854,60.0282682926829,51.8661707317073,77.537243902439,77.1956341463415,75.9860975609756,74.5613658536585,75.7786585365854,82.1975609756098,80.890243902439,70.6931463414634,56.2516097560976,80.3853658536585,59.3120243902439,58.2406341463415,71.245243902439,74.4658536585366,76.5459512195122,75.0735365853659,76.2769268292683,72.4707317073171,69.9820487804878,67.9134390243903,74.1224390243903,75.3339512195122,78.5466585365854,69.1029268292683,64.3608048780488,49.8798780487805,81.4011219512195,82.7487804878049,81.1979268292683,75.3530243902439,51.2084634146342,55.0418048780488,61.6663902439024,73.8097317073171,62.9321707317073,72.9723658536585,79.2252195121951,79.2563902439025,79.9497804878049,78.2780487804878,81.0439024390244,61.6864634146342,80.3024390243903,73.3199024390244,74.5689512195122,75.648512195122,70.9257804878049,63.1778780487805,82.4268292682927,76.4243902439025,63.4421951219512,80.8317073170732,69.9179268292683,81.9682926829268,68.9733902439024,63.8435853658537,80.9560975609756,74.079512195122,61.1420731707317,58.216487804878,59.9992682926829,54.8384146341464,57.2908292682927,80.6341463414634,73.1935609756098,71.4863902439024,78.872512195122,66.3100243902439,83.8317073170732,72.9428536585366,77.1268292682927,62.4011463414634,75.2682926829268,68.7046097560976,67.6604146341463,81.0439024390244,75.1259756097561,69.4716829268293,83.1170731707317,82.290243902439,73.4689268292683,73.9014146341463,83.3319512195122,70.45,60.9537804878049,70.2024390243902,67.7720487804878,65.7665853658537,81.459756097561,74.462756097561,65.687243902439,80.1288780487805,60.5203902439024,71.6576829268293,74.9127073170732,74.2402926829268,49.3314634146342,74.1634146341464,81.7975609756098,73.9804878048781,80.3391463414634,73.7090487804878,68.811512195122,64.6739024390244,76.6026097560976,76.5326585365854,75.1870487804878,57.5351951219512,80.7463414634146,65.6540975609756,74.7583658536585,69.0618048780488,54.641512195122,62.8027073170732,74.46,61.466,74.567512195122,64.3438780487805,77.1219512195122,60.8281463414634,52.4421463414634,74.514756097561,81.1048780487805,81.4512195121951,69.222,81.4073170731707,76.8410487804878,65.9636829268293,77.4192195121951,74.2838536585366,68.1315609756097,62.4491707317073,76.8487804878049,78.7111951219512,80.3731707317073,72.7991707317073,76.3340731707317,78.4184878048781,74.4634146341463,71.0731707317073,63.3948292682927,74.1776341463415,63.1670487804878,65.878756097561,82.3463414634146,67.7189268292683,50.3631219512195,72.4981463414634,55.0230243902439,55.2209024390244,66.259512195122,70.99,76.2609756097561,80.2780487804878,81.7048780487805,48.9379268292683,74.7157804878049,51.1914878048781,59.1323658536585,74.2469268292683,69.4001707317073,65.4565609756098,67.5223658536585,72.6403414634147,70.3052926829268,73.6463414634147,75.1759512195122,64.2918292682927,57.7676829268293,71.159512195122,76.8361951219512,78.8414634146341,68.2275853658537,72.8108780487805,74.0744146341464,79.6243902439024,75.756487804878,71.669243902439,73.2503902439024,63.583512195122,56.7365853658537,58.2719268292683,59.2373658536585,55.633)
library(ggplot2)
dataset = read.csv('C:/Users/Praahas/Projects/R-Lab/R-Lab/Demographic-Data/P2-Demographic-Data.csv')
#Scatterplot illustrating Birth Rate and Internet Usage statistics by Country categorizing by Countriesâ€™ Regions. Additional data required is present in Vectors
#Building DataFrame from Vectors and setting column names to Country, Code and Region
df<-data.frame(Country=Countries_2012_Dataset,Code=Codes_2012_Dataset,Region=Regions_2012_Dataset)
#Merge the DataFrame df with original dataset and remove any columns with repeated information
merged_df<-merge(dataset,df,by.x="Country.Code",by.y="Code")
merged_df$Country<-NULL
#Setting Transparency to 50% so that overlapping datapoints are visible. Shape can be set with values from (0-25)
qplot(data=merged_df,x=Internet.users,y=Birth.rate,colour=Region,size=I(5),shape=I(17),alpha=I(0.5),main="Birth Rate vs Internet Users")
#Setting Transparency to 50% so that overlapping datapoints are visible. Shape can be set with values from (0-25)
qplot(data=merged_df,x=Internet.users,y=Birth.rate,colour=Region,size=I(5),shape=I(17),alpha=I(0.5),main="Birth Rate vs Internet Users")
library(ggplot2)
dataset = read.csv('C:/Users/Praahas/Projects/R-Lab/R-Lab/Demographic-Data/P2-Demographic-Data.csv')
#View the Dataset after reading it
View(dataset)
#Scatterplot illustrating Birth Rate and Internet Usage statistics by Country categorizing by Countriesâ€™ Income Groups.
qplot(data=dataset,x=Internet.users,y=Birth.rate,size=I(4),colour=Income.Group)
?geom_jitter
?geom_jitter()
#boxplots
u<-ggplot(data=movies,aes(x=Genre, y=AudienceRating,colour=Genre))
setwd('C:/Users/Praahas/Projects/R-Lab/Movie-Ratings')
movies<-read.csv('movie1.csv')
movies
colnames(movies)
colnames(movies)<-c("Film","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Genre<-as.factor(movies$Genre)
movies$Year<-as.factor(movies$Year)
summary(movies)
#Aesthetics
library(ggplot2)
#Add Geometry
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating))+
geom_point()
#Add color
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))+
geom_point()
#Add Size
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))+
geom_point()
#Example to see working of LAyer by layer plotting of ggplot
p<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
p + geom_point()
p + geom_line()
p+geom_line()+geom_point()
#Overriding Aesthetics
q<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
#Add Geom Layer
q+geom_point()
#Overriding aesthetics
q+geom_point(aes(size=CriticRating))
q+geom_point(aes(colour=BudgetMillions))
q+geom_point()#q object remains as it is. we only modified teh layers by overriding it
#Overriding axes
q+geom_point(aes(x=BudgetMillions))+
xlab("Budget MIllions $$$")
#Till here we mapped aesthetitics. Now we shall set aesthetics here
q+geom_line(size=1)+geom_point()#Setting Aesthetics
#mapping vs Setting
r<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating))
r+geom_point()
#add color
r+geom_point(aes(colour=Genre))# use aes() function when mappingh to a variable
r+geom_point(colour="DarkGreen")#setting
r+geom_point(size=10)# use aes() function when mappingh to a variable
r+geom_point(aes(size=10))#Error
#histogram and density charts
s<-ggplot(data=movies,aes(x=BudgetMillions))
s+geom_histogram(binwidth = 10)
#addcolor
s+geom_histogram(binwidth=10,aes(fill=Genre))
s+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
s+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
s+geom_density(aes(fill=Genre),position="stack")
#Starting Layer
t<-ggplot(data=movies,aes(x=AudienceRating))
#alternate way
t<-ggplot(data=movies)
t+geom_histogram(binwidth=10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth=10,fill="White",colour="Blue")
t<-ggplot(data=movies)
t+geom_histogram(binwidth = 10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth = 10,aes(x=CriticRating),fill="White",colour="Blue")
#Skeleton Plot
t<-ggplot()
#Statistical Transformations
?geom_smooth
u<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
u+geom_point()+geom_smooth(fill=NA)
#boxplots
u<-ggplot(data=movies,aes(x=Genre, y=AudienceRating,colour=Genre))
u+geom_boxplot()
u+geom_boxplot(size=1.2)
u+geom_boxplot(size=1.2)+geom_point()
#tip/hack
u+geom_boxplot(size=1.2)+geom_point()+geom_jitter()
u+geom_jitter()+geom_boxplot(size=1.2,alpha=0.3)
#boxplots
u<-ggplot(data=movies,aes(x=Genre, y=CriticRating,colour=Genre))
u+geom_boxplot()
u+geom_boxplot(size=1.2)
u+geom_boxplot(size=1.2)+geom_point()
#tip/hack
u+geom_boxplot(size=1.2)+geom_point()+geom_jitter()
u+geom_jitter()+geom_boxplot(size=1.2,alpha=0.3)
v+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
#Facets
v<-ggplot(data=movies,aes(x=BudgetMillions))
v+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
v+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
facet_grid(Genre~.)
v+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
facet_grid(Genre~.,scales="free")
v<-ggplot(data=movies,aes(x=BudgetMillions))
v+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
facet_grid(Genre~.,scales="free")
w<-ggplot(data=movies.aes(x=CriticRating,y=AudienceRating,colour=Genre))
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(size=3)
#facets
w+geom_point(size=3)+
facet_grid(Genre~.)
w+geom_point(size=3)+
facet_grid(Year~.)
w+geom_point(size=3)+
facet_grid(Genre~Year)
w+geom_point(size=3)+
geom_smooth()+
facet_grid(Genre~Year)
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
#Co-ordinates
m<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,size=BudgetMillions,colour=Genre))
m+geom_point()
m+geom_point()
m+geom_point()+
xlim(50,100)+
ylim(50,100)
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
n<-ggplot(data=movies,aes(x=BudgetMillions))
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
+ylim(0,50)
n<-ggplot(data=movies,aes(x=BudgetMillions))
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
ylim(0,50)
m+geom_point()+
xlim(50,100)+
ylim(50,100)
n<-ggplot(data=movies,aes(x=BudgetMillions))
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
ylim(0,50)
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
+
ylim(0,50)
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
ylim(0,50)
#instead use zoom
n+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")+
coord_cartesian(ylim=c(0,50))
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)+
coord_cartesian(ylim=c(0,50))
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)+
coord_cartesian(ylim=c(0,50))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)+
coord_cartesian(ylim=c(0,100))
#Theme
o<-ggplot(data=movies,aes(x=BudgetMillions))
o+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
h<-o+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
h+xlab("Money Axis")+
ylab("Number of Movies")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20))
h+xlab("Money Axis")+
ylab("Number of Movies")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20))
#legend formatting
h+xlab("Money Axis")+
ylab("Number of Movies")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1))
#legend formatting
h+xlab("Money Axis")+
ylab("Number of Movies")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1),
legend.justification=c(1,1))
#Title Formatting
h+xlab("Money Axis")+
ylab("Number of Movies")+
ggtitle("Movie Budget Distribution")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1),
legend.justification=c(1,1))
#Title Formatting
h+xlab("Money Axis")+
ylab("Number of Movies")+
ggtitle("Movie Budget Distribution")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1),
legend.justification=c(1,1),
plot.title = =element_text(colour="DarkBlue",
#Title Formatting
h+xlab("Money Axis")+
ylab("Number of Movies")+
ggtitle("Movie Budget Distribution")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1),
legend.justification=c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40,
family="Courier"))
setwd('C:/Users/Praahas/Projects/R-Lab/Movie-Ratings')
movies<-read.csv('movie1.csv')
colnames(movies)<-c("Film","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Genre<-as.factor(movies$Genre)
movies$Year<-as.factor(movies$Year)
summary(movies)
library(ggplot2)
p<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
p + geom_point()
p + geom_line()
p+geom_line()+geom_point()
p<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
p + geom_point()
#Overriding Aesthetics
q<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
#Add Geom Layer
q+geom_point()
#Overriding aesthetics
q+geom_point(aes(size=CriticRating))
q+geom_point(aes(colour=BudgetMillions))
q+geom_point()#q object remains as it is. we only modified teh layers by overriding it
#Overriding axes
q+geom_point(aes(x=BudgetMillions))+
xlab("Budget MIllions $$$")
#Till here we mapped aesthetitics. Now we shall set aesthetics here
q+geom_line(size=1)+geom_point()#Setting Aesthetics
#Overriding Aesthetics
q<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
#Overriding aesthetics
q+geom_point(aes(size=CriticRating))
q+geom_point(aes(colour=BudgetMillions))
#Overriding Aesthetics
q<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre,size=BudgetMillions))
q+geom_point(aes(x=BudgetMillions))+
xlab("Budget MIllions $$$")
#histogram and density charts
s<-ggplot(data=movies,aes(x=BudgetMillions))
s+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
s+geom_density(aes(fill=Genre),position="stack")
t<-ggplot(data=movies,aes(x=AudienceRating))
#alternate way
t<-ggplot(data=movies)
t+geom_histogram(binwidth=10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth=10,fill="White",colour="Blue")
t<-ggplot(data=movies)
t+geom_histogram(binwidth = 10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth = 10,aes(x=CriticRating),fill="White",colour="Blue")
#alternate way
t<-ggplot(data=movies)
t+geom_histogram(binwidth=10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth=10,fill="White",colour="Blue")
t<-ggplot(data=movies,aes(x=AudienceRating))
t<-ggplot(data=movies,aes(x=AudienceRating))
t<-ggplot(data=movies)
t+geom_histogram(binwidth = 10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth = 10,aes(x=CriticRating),fill="White",colour="Blue")
t<-ggplot(data=movies)
t+geom_histogram(binwidth = 10,aes(x=AudienceRating),fill="White",colour="Blue")
t+geom_histogram(binwidth = 10,aes(x=CriticRating),fill="White",colour="Blue")
u<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
u+geom_point()+geom_smooth(fill=NA)
#boxplots
u<-ggplot(data=movies,aes(x=Genre, y=AudienceRating,colour=Genre))
u+geom_boxplot()
u+geom_boxplot(size=1.2)
u<-ggplot(data=movies,aes(x=Genre, y=AudienceRating,colour=Genre))
u+geom_jitter()+geom_boxplot(size=1.2,alpha=0.3)
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(size=3)
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
-
-
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)+
coord_cartesian(ylim=c(0,100))http://127.0.0.1:39969/graphics/b3fe65fc-6250-4826-82a5-9f4b5e7ed96b.png
w<-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w+geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)+
coord_cartesian(ylim=c(0,100))
s<-ggplot(data=movies,aes(x=BudgetMillions))
s+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
o<-ggplot(data=movies,aes(x=BudgetMillions))
h<-o+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
o<-ggplot(data=movies,aes(x=BudgetMillions))
h<-o+geom_histogram(binwidth=10,aes(fill=Genre),colour="Black")
h+xlab("Money Axis")+
ylab("Number of Movies")+
ggtitle("Movie Budget Distribution")+
theme(axis.title.x= element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position=c(1,1),
legend.justification=c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40,
family="Courier"))
setwd('C:/Users/Praahas/Projects/R-Lab/Movie-Ratings')
movies<-read.csv('movie2.csv')
View(movies)
str(movies)
#Genre,gross%US,aes - Budget,Studio
colnames(movies)
colnames(movies)<-c("Day.of.Week","Director","Genre","Movie.Title","Release.Date","Studio",
"Adjusted.Gross.mill","Budget.mill","Gross.mill","IMDb.Rating",
"MovieLens.Rating","Overseas.mill","Overseas","Profit.mill","Profit",
"Runtime.min","US.mill","Gross.US")
library(ggplot2)
#Interesting insight
ggplot(data=movies,aes(x=Day.of.Week))+
geom_bar()
filter1<-(movies$Genre=="action")|(movies$Genre=="adventure")|(movies$Genre=="animation")
filter2<-(movies$Studio %in% c("Buena Vista Studios","WB","Fox","Universal","Sony","Paramount Pictures"))
movies2<-movies[filter1&filter2,]
p<-ggplot(data=movies2,aes(x=Genre,y=Gross.US))
p+geom_point()
p<-ggplot(data=movies2,aes(x=Genre,y=Gross.US))
p+geom_jitter()+
geom_boxplot(alpha=0.7)
#Observe that no movie relkeased on Monday
colnames(movies$Studio)
filter1<-(movies$Genre=="action")|(movies$Genre=="adventure")|(movies$Genre=="animation")
filter2<-(movies$Studio %in% c("Buena Vista Studios","WB","Fox","Universal","Sony","Paramount Pictures"))
movies2<-movies[filter1&filter2,]
p<-ggplot(data=movies2,aes(x=Genre,y=Gross.US))
p+geom_jitter(aes(size=Budget.mill,colour=Studio))+
geom_boxplot(alpha=0.7)
filter1<-(movies$Genre=="action")|(movies$Genre=="adventure")|(movies$Genre=="animation")|(movies$Genre=="comedy")|(movies$Genre=="drama")
filter2<-(movies$Studio %in% c("Buena Vista Studios","WB","Fox","Universal","Sony","Paramount Pictures"))
movies2<-movies[filter1&filter2,]
p<-ggplot(data=movies2,aes(x=Genre,y=Gross.US))
p+geom_jitter(aes(size=Budget.mill,colour=Studio))+
geom_boxplot(alpha=0.7)
p+geom_jitter(aes(size=Budget.mill,colour=Studio))+
geom_boxplot(alpha=0.7,outlier.colour=NA)
q<-p+geom_jitter(aes(size=Budget.mill,colour=Studio))+
geom_boxplot(alpha=0.7,outlier.colour=NA)
#non data ink
q<-q+
xlab("Genre")+
ylab("Gross% US")+
ggtitle("DOomestic Gross % by Genre")
q
#non data ink
q<-q+
xlab("Genre")+
ylab("Gross% US")+
ggtitle("DOomestic Gross % by Genre")
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
#non data ink
q<-q+
xlab("Genre")+
ylab("Gross% US")+
ggtitle("DOomestic Gross % by Genre")
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
plot.title=element_text(size=40,family="Comic Sans")
legend.title=element_text(size=20),
t
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
plot.title=element_text(size=40,family="Comic Sans"),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
plot.title=element_text(size=40,family="Comic Sans MS"),
legend.title=element_text(size=20),
legend.text=element_text(size=20),
text=element_text(family="Comic Sans MS"))
q
#non data ink
q<-q+
xlab("Genre")+
ylab("Gross% US")+
ggtitle("Domestic Gross % by Genre")
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
plot.title=element_text(size=40,family="Comic Sans MS"),
legend.title=element_text(size=20),
legend.text=element_text(size=20),
text=element_text(family="Comic Sans MS"))
q
#Observe that no movie relkeased on Monday
colnames(movies$Studio)
q$label$size<-"Budget $M"
q$label$size<-"Budget $M"
q$label$size<-"Budget $M"
#non data ink
q<-q+
xlab("Genre")+
ylab("Gross% US")+
ggtitle("Domestic Gross % by Genre")
q<-q+theme(axis.title.x = element_text(colour="Blue",size=30),
axis.title.y = element_text(colour="Blue",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
plot.title=element_text(size=40,family="Comic Sans MS"),
legend.title=element_text(size=20),
legend.text=element_text(size=20),
text=element_text(family="Comic Sans MS"))
q
q$label$size<-"Budget $M"
